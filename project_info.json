{"name": "bgk_ra6e2_freertos", "fsp_version": "default", "board_or_device": "BGK-RA6E2", "toolchain": "gcc", "toolchain_version": "default", "rtos": "FreeRTOS", "template": "FreeRTOS - Minimal - Static Allocation", "sequence": [{"op": "create_thread", "name": "t0"}, {"op": "change_property", "type": "instance", "module_or_thread": "t0", "id": "rtos.awsfreertos.thread.name", "value": "Sensor", "name": "t0_name"}, {"op": "change_property", "type": "instance", "module_or_thread": "t0", "id": "_symbol", "value": "sensor_thread", "name": "t0_symbol"}, {"op": "change_property", "type": "instance", "module_or_thread": "t0", "id": "rtos.awsfreertos.thread.priority", "value": 2, "name": "t0_priority"}, {"op": "change_property", "type": "instance", "module_or_thread": "t0", "id": "rtos.awsfreertos.thread.stack", "value": 1536, "name": "t0_stack_size"}, {"op": "change_property", "type": "common", "module_or_thread": "t0", "id": "config.awsfreertos.thread.configuse_recursive_mutexes", "value": "config.awsfreertos.thread.configuse_recursive_mutexes.enabled"}, {"op": "change_property", "type": "common", "module_or_thread": "t0", "id": "config.awsfreertos.thread.configuse_mutexes", "value": "config.awsfreertos.thread.configuse_mutexes.enabled"}, {"op": "create_thread", "name": "t1"}, {"op": "change_property", "type": "instance", "module_or_thread": "t1", "id": "rtos.awsfreertos.thread.name", "value": "Main", "name": "t1_name"}, {"op": "change_property", "type": "instance", "module_or_thread": "t1", "id": "_symbol", "value": "main_thread", "name": "t1_symbol"}, {"op": "change_property", "type": "instance", "module_or_thread": "t1", "id": "rtos.awsfreertos.thread.priority", "value": 1, "name": "t1_priority"}, {"op": "change_property", "type": "instance", "module_or_thread": "t1", "id": "rtos.awsfreertos.thread.stack", "value": 2048, "name": "t1_stack_size"}, {"op": "change_property", "type": "common", "module_or_thread": "t1", "id": "config.awsfreertos.thread.configuse_recursive_mutexes", "value": "config.awsfreertos.thread.configuse_recursive_mutexes.enabled"}, {"op": "change_property", "type": "common", "module_or_thread": "t1", "id": "config.awsfreertos.thread.configuse_mutexes", "value": "config.awsfreertos.thread.configuse_mutexes.enabled"}, {"op": "add", "name": "mqtt", "id": "module.driver.mqtt_onchip_da16xxx", "thread": "t1"}, {"op": "change_property", "type": "instance", "module_or_thread": "mqtt", "id": "module.driver.mqtt_onchip_da16xxx.mqtt_certs", "value": "certificate", "name": "mqtt_certificate"}, {"op": "find_module", "name": "wifi_da16xxx", "module": "mqtt", "requires_id": "module.driver.mqtt_onchip_da16xxx.requires.wifi_da16xxx"}, {"op": "find_module", "name": "transport_uart", "module": "mqtt", "requires_id": "module.driver.wifi_da16xxx.requires.at_transport_da16xxx"}, {"op": "change_property", "type": "common", "module_or_thread": "wifi_da16xxx", "id": "config.driver.wifi_da16xxx.enable_sntp_client", "value": "config.driver.wifi_da16xxx.enable_sntp_client.disabled", "name": "sntp_state"}, {"op": "change_property", "type": "instance", "module_or_thread": "wifi_da16xxx", "id": "module.driver.wifi_da16xxx.sntp_server_ip", "value": "216.239.35.0", "name": "sntp_ip_addr"}, {"op": "change_property", "type": "instance", "module_or_thread": "wifi_da16xxx", "id": "module.driver.wifi_da16xxx.sntp_utc_offset_in_hours", "value": "module.driver.wifi_da16xxx.sntp_utc_offset_in_hours.-8", "name": "sntp_tz_offset"}, {"op": "change_property", "type": "common", "module_or_thread": "wifi_da16xxx", "id": "config.driver.wifi_da16xxx.cmd_port_tx_size", "value": 500, "name": "da16xxx_tx_buf_size"}, {"op": "change_property", "type": "common", "module_or_thread": "wifi_da16xxx", "id": "config.driver.wifi_da16xxx.cmd_port_rx_size", "value": 768, "name": "da16xxx_rx_buf_size"}, {"op": "change_property", "type": "common", "module_or_thread": "wifi_da16xxx", "id": "config.driver.wifi_da16xxx.enable_da16600_support", "value": "config.driver.wifi_da16xxx.enable_da16600_support.enabled", "name": "da16600_support_enable"}, {"op": "find_module", "name": "transport_uart", "module": "mqtt", "requires_id": "module.driver.wifi_da16xxx.requires.at_transport_da16xxx"}, {"op": "change_property", "type": "common", "module_or_thread": "transport_uart", "id": "config.driver.at_transport_da16xxx.pin_control_port", "value": "config.driver.at_transport_da16xxx.pin_control_port.PORT_00", "name": "reset_port"}, {"op": "change_property", "type": "common", "module_or_thread": "transport_uart", "id": "config.driver.at_transport_da16xxx.pin_control_pin", "value": "config.driver.at_transport_da16xxx.pin_control_pin.PIN_05", "name": "reset_pin"}, {"op": "find_module", "name": "pmod2_uart", "module": "mqtt", "requires_id": "module.driver.at_transport_da16xxx_uart.requires.uart"}, {"op": "change_property", "type": "common", "module_or_thread": "pmod2_uart", "id": "config.driver.sci_uart.flow_control", "value": "config.driver.sci_uart.flow_control.enabled", "name": "pmod2_uart_flow_support"}, {"op": "fill_requires", "name": "dtc_pmod2_uart", "module": "pmod2_uart", "requires_id": "module.driver.uart_on_sci_uart.requires.transfer_tx", "module_id": "module.driver.transfer_on_dtc"}, {"op": "change_property", "type": "common", "module_or_thread": "pmod2_uart", "id": "config.driver.sci_uart.dtc_support", "value": "config.driver.sci_uart.dtc_support.enabled", "name": "pmod2_uart_dtc_support"}, {"op": "change_property", "type": "instance", "module_or_thread": "pmod2_uart", "id": "module.driver.uart.rx_fifo_trigger", "value": "module.driver.uart.rx_fifo_trigger.one", "name": "uart_stack_fifo_trigger"}, {"op": "change_property", "type": "instance", "module_or_thread": "pmod2_uart", "id": "module.driver.uart.channel", "value": 9, "name": "pmod2_uart_channel"}, {"op": "change_connectivity", "id": "sci9", "pin": "txd9", "port": "p109", "success": "yes"}, {"op": "change_pin", "id": "sci9", "attr": "mode", "value": "mode.asynchronousuart.free", "success": "yes"}, {"op": "change_connectivity", "id": "sci9", "pin": "rxd9", "port": "p110", "success": "yes"}, {"op": "change_pin", "id": "sci9", "attr": "mode", "value": "mode.asynchronousuart.free", "success": "yes"}, {"op": "change_pin", "id": "p005", "attr": "gpio_mode", "value": "gpio_mode.gpio_mode_out.low", "success": "yes"}, {"op": "change_pin", "id": "p111", "attr": "gpio_mode", "value": "gpio_mode.gpio_mode_out.low", "success": "yes"}, {"op": "add", "name": "hs400x_stack", "id": "module.driver.hs400x_on_hs400x", "thread": "t0"}, {"op": "get_dependency", "name": "device_i2c_comms_stack", "module": "hs400x_stack", "requires_id": "module.driver.hs400x.requires.comms_i2c_device"}, {"op": "get_dependency", "name": "i2c_shared_bus_stack", "module": "device_i2c_comms_stack", "requires_id": "module.driver.comms_i2c_device.requires.comms_i2c_bus"}, {"op": "fill_requires", "module": "i2c_shared_bus_stack", "requires_id": "module.driver.comms_i2c_bus.requires.i2c", "module_id": "module.driver.i2c_on_sci_i2c", "name": "i2c_master_stack"}, {"op": "change_property", "type": "instance", "module_or_thread": "i2c_master_stack", "id": "module.driver.i2c.channel", "value": 0}, {"op": "change_property", "type": "instance", "module_or_thread": "i2c_master_stack", "id": "module.driver.i2c.name", "value": "g_i2c0"}, {"op": "change_connectivity", "id": "sci0", "pin": "rxd0", "port": "p100", "success": "yes"}, {"op": "change_pin", "id": "sci0", "attr": "mode", "value": "mode.simplei2c.free", "success": "yes"}, {"op": "change_connectivity", "id": "sci0", "pin": "txd0", "port": "p101", "success": "yes"}, {"op": "change_pin", "id": "sci0", "attr": "mode", "value": "mode.simplei2c.free", "success": "yes"}, {"op": "change_pin", "id": "p411", "attr": "gpio_mode", "value": "gpio_mode.gpio_mode_out.low", "success": "yes"}, {"op": "change_pin", "id": "p302", "attr": "gpio_mode", "value": "gpio_mode.disabled", "success": "yes"}, {"op": "change_connectivity", "id": "irq", "pin": "irq5", "port": "p302", "success": "yes"}, {"op": "add_file", "src": "modules/pmod/hs4001/src/hs4001_sensor.c", "dst": "src/sensor/hs4001_sensor.c"}, {"op": "add_file", "src": "modules/pmod/hs4001/src/hs4001_sensor.h", "dst": "src/sensor/hs4001_sensor.h"}, {"op": "add", "name": "zmod4xxx_stack", "id": "module.driver.zmod4xxx_on_zmod4xxx", "thread": "t0"}, {"op": "fill_requires", "module": "zmod4xxx_stack", "requires_id": "module.driver.zmod4xxx.requires.zmod4xxx_lib", "module_id": "module.driver.zmod4410_iaq_2nd_on_zmod4xxx", "name": "zmod4410_library"}, {"op": "get_dependency", "name": "device_i2c_comms_stack", "module": "zmod4410_library", "requires_id": "module.driver.zmod4xxx.requires.comms_i2c_device"}, {"op": "fill_requires", "module": "device_i2c_comms_stack", "requires_id": "module.driver.comms_i2c_device.requires.comms_i2c_bus", "use": true, "dependant_instance_name": "i2c_shared_bus_stack"}, {"op": "change_connectivity", "id": "sci0", "pin": "rxd0", "port": "p100", "success": "yes"}, {"op": "change_pin", "id": "sci0", "attr": "mode", "value": "mode.simplei2c.free", "success": "yes"}, {"op": "change_connectivity", "id": "sci0", "pin": "txd0", "port": "p101", "success": "yes"}, {"op": "change_pin", "id": "sci0", "attr": "mode", "value": "mode.simplei2c.free", "success": "yes"}, {"op": "change_pin", "id": "p411", "attr": "gpio_mode", "value": "gpio_mode.gpio_mode_out.low", "success": "yes"}, {"op": "change_pin", "id": "p302", "attr": "gpio_mode", "value": "gpio_mode.disabled", "success": "yes"}, {"op": "change_connectivity", "id": "irq", "pin": "irq5", "port": "p302", "success": "yes"}, {"op": "add_file", "src": "modules/pmod/zmod4410/src/zmod4410_sensor.c", "dst": "src/sensor/zmod4410_sensor.c"}, {"op": "add_file", "src": "modules/pmod/zmod4410/src/zmod4410_sensor.h", "dst": "src/sensor/zmod4410_sensor.h"}, {"op": "replace_in_file", "src": "src/sensor/zmod4410_sensor.c", "match": "@PMOD_RESET_PIN", "replace": "#define ZMOD4XXX_RESET_PIN    BSP_IO_PORT_04_PIN_11\n"}, {"op": "check_constraints_number", "number": 0}, {"op": "change_property", "module_or_thread": "bsp", "type": "common", "id": "config.bsp.common.heap", "value": 1024, "name": "bsp_heap_alloc"}, {"op": "change_property", "module_or_thread": "t1", "type": "common", "id": "config.awsfreertos.thread.configtotal_heap_size", "value": 2048}, {"op": "add_include", "path": "/src/qe_gen", "absolute": "no"}, {"op": "add_include", "path": "/src/qe_gen/ble", "absolute": "no"}, {"op": "add_include", "path": "/src/qe_gen/ble/profile_cmn", "absolute": "no"}, {"op": "add_include", "path": "/src/qe_gen/ble/discovery", "absolute": "no"}, {"op": "add_file", "src": "applications/aws_mqtt_onchip/Documentation/README.md", "dst": "README.md"}, {"op": "add_file", "src": "applications/common_files/LICENSE.md", "dst": "LICENSE.md"}, {"op": "generate"}, {"op": "add_folder", "src": "applications/aws_mqtt_onchip/freertos/src", "dst": "src"}, {"op": "add_folder", "src": "applications/common_files/i2c", "dst": "src/sensor"}, {"op": "add_folder", "src": "applications/common_files/qc-middleware/common_utils", "dst": "src/qc-middleware/common_utils"}, {"op": "add_folder", "src": "applications/common_files/qc-middleware/SEGGER_RTT", "dst": "src/qc-middleware/SEGGER_RTT"}, {"op": "add_include", "path": "/src/qc-middleware", "absolute": "no"}, {"op": "add_include", "path": "/src/qc-middleware/common_utils", "absolute": "no"}, {"op": "add_include", "path": "/src/qc-middleware/SEGGER_RTT", "absolute": "no"}, {"op": "replace_in_file", "src": "src/qc-middleware/common_utils/global_logging_definitions.h", "match": "0x20000000 0x8000", "replace": "0x20000000 0x8000\n"}, {"op": "add_file", "src": "applications/common_files/qc-middleware/sensor_manager/sm.c", "dst": "src/qc-middleware/sensor_manager/sm.c"}, {"op": "add_file", "src": "applications/common_files/qc-middleware/sensor_manager/sm.h", "dst": "src/qc-middleware/sensor_manager/sm.h"}, {"op": "add_file", "src": "applications/common_files/qc-middleware/sensor_manager/sm_handle.h", "dst": "src/qc-middleware/sensor_manager/sm_handle.h"}, {"op": "add_include", "path": "/src/qc-middleware/sensor_manager", "absolute": "no"}, {"op": "replace_in_file", "src": "src/sm_define_sensors.inc", "match": "@DEFINE_SENSOR_TYPE", "replace": "DEFINE_SENSOR_TYPE(TEMPERATURE, C, temperature)\n\nDEFINE_SENSOR_TYPE(HUMIDITY, %, humidity)\n\nDEFINE_SENSOR_TYPE(INDOOR_AIR_QUALITY, , indoor-aqi)\n\nDEFINE_SENSOR_TYPE(TVOC, mg/m3, tvoc)\n\nDEFINE_SENSOR_TYPE(ETOH, ppm, EtOH)\n\nDEFINE_SENSOR_TYPE(ESTIMATE_CO2, ppm, eCO2)\n"}, {"op": "replace_in_file", "src": "src/sm_define_sensors.inc", "match": "@DEFINE_SENSOR_DRIVER", "replace": "DEFINE_SENSOR_DRIVER(hs4001_sensor)\nDEFINE_SENSOR_DRIVER(zmod4410_sensor)\n"}, {"op": "replace_in_file", "src": "src/sm_define_sensors.inc", "match": "@DEFINE_SENSOR_INSTANCE", "replace": "DEFINE_SENSOR_INSTANCE(TEMPERATURE, 0, SM_CH0, hs4001_sensor, 1, 100, 0, 0)\n\nDEFINE_SENSOR_INSTANCE(HUMIDITY, 0, SM_CH1, hs4001_sensor, 1, 100, 0, 0)\n\nDEFINE_SENSOR_INSTANCE(INDOOR_AIR_QUALITY, 0, SM_CH0, zmod4410_sensor, 1, 10, 0, 0)\n\nDEFINE_SENSOR_INSTANCE(TVOC, 0, SM_CH1, zmod4410_sensor, 1, 100, 0, 0)\n\nDEFINE_SENSOR_INSTANCE(ETOH, 0, SM_CH2, zmod4410_sensor, 1, 100, 0, 0)\n\nDEFINE_SENSOR_INSTANCE(ESTIMATE_CO2, 0, SM_CH3, zmod4410_sensor, 1, 100, 0, 0)\n"}, {"op": "replace_in_file", "src": "src/qc-middleware/common_utils/common_utils.h", "match": "//@BOARD_DEFINITIONS", "replace": "\n#define GREEN_LED  BSP_IO_PORT_01_PIN_04 // LED1 on the board\n\n#define LED1_LED  BSP_IO_PORT_01_PIN_04\n\n\n#define GREEN2_LED  BSP_IO_PORT_01_PIN_12 // LED2 on the board\n\n#define LED2_LED  BSP_IO_PORT_01_PIN_12\n\n#define RED_LED GREEN2_LED\n#define BLUE_LED GREEN2_LED\n#define SW1_SWITCH  BSP_IO_PORT_03_PIN_04 // Switch S1 on the board\n"}, {"op": "build", "completed": 1, "warnings_allowed": [".*rm_psa_crypto.*unused-parameter.*", ".*rm_psa_crypto.*conversion.*", ".*rm_psa_crypto.*sign-conversion.*", ".*rm_mbedtls.*conversion.*", ".*rm_mbedtls.*sign-conversion.*", ".*rm_psa_crypto.*unused-function.*", ".*rm_psa_crypto.*implicit-function-declaration.*", ".*rm_psa_crypto.*unused-variable.*", ".*rm_aws_transport_interface_port.*incompatible-pointer-types.*", ".*rm_aws_transport_interface_port.*conversion.*", ".*rm_aws_transport_interface_port.*sign-conversion.*", ".*rm_aws_transport_interface_port.*unused-parameter.*", ".*crypto_procedures.*sign-compare.*", ".*crypto_procedures.*conversion.*", ".*crypto_procedures.*unused-parameter.*", ".*rm_aws_cellular_sockets_wrapper.*logical.*", ".*using_mbedtls_pkcs11.*Wunused-variable.*"]}], "type": "flat", "secure_project": ""}